#setwd("/Volumes/TRAVELDRIVE/MSDS6372/HWMark")
library(tseries)
library(forecast)
library(ggplot2)
bills<-read.csv("ElectricBill.csv")
head(bills)
bills$DateIndex<-1:nrow(bills)
ggplot()+geom_line(data=bills,aes(x=DateIndex,y=Bill))
attach(bills)
Acf(Bill)
Pacf(Bill)
library(car)
durbinWatsonTest(lm(Bill~1),max.lag=4)
AR1<-arima(Bill,order=c(1,0,0))
AR2<-arima(Bill,order=c(2,0,0))
AR3<-arima(Bill,order=c(3,0,0))
AR4<-arima(Bill,order=c(4,0,0))
AR5<-arima(Bill,order=c(5,0,0))
AR4<-arima(Bill,order=c(4,0,0))
AR5<-arima(Bill,order=c(5,0,0))
tsdisplay(residuals(AR5),lag.max=15,main="AR(5) Resid. Diagnostics")
tsdisplay(residuals(AR4),lag.max=15,main="AR(4) Resid. Diagnostics")
tsdisplay(residuals(AR3),lag.max=15,main="AR(3) Resid. Diagnostics")
tsdisplay(residuals(AR2),lag.max=15,main="AR(2) Resid. Diagnostics")
tsdisplay(residuals(AR1),lag.max=15,main="AR(1) Resid. Diagnostics")
AIC(AR1)
AIC(AR2)
AIC(AR3)
AIC(AR4)
AIC(AR5)
ARIMA.fit<-auto.arima(Bill,seasonal=FALSE)
ARIMA.fit
ARIMA.fit<-auto.arima(Bill,seasonal=FALSE,stepwise=FALSE)
ARIMA.fit
plot(forecast(AR1,h=10))
points(1:length(Bill),fitted(AR1),type="l",col="blue")
plot(forecast(ARIMA.fit,h=100))
points(1:length(Bill),fitted(ARIMA.fit),type="l",col="blue")
plot(AvgTemp,Bill,xlab="Avg. Temperature")
ols<-lm(Bill~AvgTemp)
abline(ols)
text(80,200,paste("Cor=",round(cor(Bill,AvgTemp),2)))
holdout.test<-window(ts(Bill),start=36)
train<-Bill[1:35]
predictor<-AvgTemp[1:35]
simpleols<-arima(train,order=c(0,0,0),xreg=predictor)
tsdisplay(residuals(simpleols),lag.max=15,main="Resid. Diagnostics of OLS")
newpred<-as.matrix(cbind(predictor,predictor^2))
colnames(newpred)<-c("Pred","Pred2")
ARIMA.with.Pred2<-auto.arima(train,xreg=newpred,stepwise=FALSE)
ARIMA.with.Pred2
tsdisplay(residuals(ARIMA.with.Pred2),lag.max=15,main="Resid. Diagnostics AR(4) Quadratic")
test.pred<-as.matrix(cbind(AvgTemp[36:40],AvgTemp[36:40]^2))
colnames(test.pred)<-c("Pred","Pred2")
plot(forecast(ARIMA.with.Pred2,h=5,xreg=test.pred))
points(1:length(train),fitted(ARIMA.with.Pred2),type="l",col="blue")
points(1:40,Bill,type="l")
ARIMA.with.Pred<-auto.arima(train,xreg=predictor,stepwise=FALSE)
ARIMA.with.Pred<-auto.arima(train,xreg=predictor,stepwise=FALSE)
ARIMA.with.Pred
tsdisplay(residuals(ARIMA.with.Pred),lag.max=15,main="Resid. Diagnostics with AR(4)")
plot(forecast(ARIMA.with.Pred,h=5,xreg=data.frame(predictor=AvgTemp[36:40])))
newpred<-as.matrix(cbind(predictor,predictor^2))
colnames(newpred)<-c("Pred","Pred2")
ARIMA.with.Pred2<-auto.arima(train,xreg=newpred,stepwise=FALSE)
ARIMA.with.Pred2
tsdisplay(residuals(ARIMA.with.Pred2),lag.max=15,main="Resid. Diagnostics AR(4) Quadratic")
test.pred<-as.matrix(cbind(AvgTemp[36:40],AvgTemp[36:40]^2))
colnames(test.pred)<-c("Pred","Pred2")
plot(forecast(ARIMA.with.Pred2,h=5,xreg=test.pred))
points(1:length(train),fitted(ARIMA.with.Pred2),type="l",col="blue")
points(1:40,Bill,type="l")
test.pred
data.frame(predictor=AvgTemp[36:40])
plot(forecast(ARIMA.with.Pred,h=5,xreg=data.frame(predictor=AvgTemp[36:40])))
ARIMA.with.Pred<-auto.arima(train,xreg=predictor,stepwise=FALSE)
ARIMA.with.Pred
tsdisplay(residuals(ARIMA.with.Pred),lag.max=15,main="Resid. Diagnostics with AR(4)")
plot(forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40])))
points(1:length(train),fitted(ARIMA.with.Pred),type="l",col="blue")
points(1:40,Bill,type="l")
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5,xreg=data.frame(predictor=AvgTemp[36:40]))
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40]))
accuracy(casts.avgtemp,Bill[36:40])
cast.avgtemp.quad<-forecast(ARIMA.with.Pred2,h=5,xreg=test.pred)
accuracy(cast.avgtemp.quad,Bill[36:40])
newpred<-as.matrix(cbind(predictor,predictor^2))
colnames(newpred)<-c("Pred","Pred2")
ARIMA.with.Pred2<-auto.arima(train,xreg=newpred,stepwise=FALSE)
ARIMA.with.Pred2
tsdisplay(residuals(ARIMA.with.Pred2),lag.max=15,main="Resid. Diagnostics AR(4) Quadratic")
test.pred<-as.matrix(cbind(AvgTemp[36:40],AvgTemp[36:40]^2))
colnames(test.pred)<-c("Pred","Pred2")
plot(forecast(ARIMA.with.Pred2,h=5,xreg=test.pred))
points(1:length(train),fitted(ARIMA.with.Pred2),type="l",col="blue")
points(1:40,Bill,type="l")
ARIMA.with.Pred<-AR4(train,xreg=predictor,stepwise=FALSE)
ARIMA.with.Pred<-AR4(train,xreg=predictor)
simpleols<-AR4(train,order=c(0,0,0),xreg=predictor)
holdout.test<-window(ts(Bill),start=36)
train<-Bill[1:35]
predictor<-AvgTemp[1:35]
simpleols<-arima(train,order=c(0,0,0),xreg=predictor)
tsdisplay(residuals(simpleols),lag.max=15,main="Resid. Diagnostics of OLS")
holdout.test
predictor
holdout.test<-window(ts(Bill),start=36)
train<-Bill[1:35]
predictor<-AvgTemp[1:35]
simpleols<-arima(train,order=c(4,0,0),xreg=predictor)
tsdisplay(residuals(simpleols),lag.max=15,main="Resid. Diagnostics of OLS")
ARIMA.with.Pred<-auto.arima(train,xreg=predictor,stepwise=FALSE)
ARIMA.with.Pred
tsdisplay(residuals(ARIMA.with.Pred),lag.max=15,main="Resid. Diagnostics with AR(4)")
plot(forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40])))
points(1:length(train),fitted(ARIMA.with.Pred),type="l",col="blue")
points(1:40,Bill,type="l")
holdout.test<-window(ts(Bill),start=36)
train<-Bill[1:35]
predictor<-AvgTemp[1:35]
simpleols<-arima(train,order=c(4,0,0))
tsdisplay(residuals(simpleols),lag.max=15,main="Resid. Diagnostics of OLS")
ARIMA.with.Pred<-auto.arima(train,order=c(4,0,0))
ARIMA.with.Pred<-arima(train,order=c(4,0,0))
ARIMA.with.Pred<-arima(train,order=c(4,0,0))
ARIMA.with.Pred
tsdisplay(residuals(ARIMA.with.Pred),lag.max=15,main="Resid. Diagnostics with AR(4)")
plot(forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40])))
points(1:length(train),fitted(ARIMA.with.Pred),type="l",col="blue")
points(1:40,Bill,type="l")
newpred<-as.matrix(cbind(predictor,predictor^2))
colnames(newpred)<-c("Pred","Pred2")
ARIMA.with.Pred2<-arima(train,order=c(4,0,0))
ARIMA.with.Pred2
tsdisplay(residuals(ARIMA.with.Pred2),lag.max=15,main="Resid. Diagnostics AR(4) Quadratic")
test.pred<-as.matrix(cbind(AvgTemp[36:40],AvgTemp[36:40]^2))
colnames(test.pred)<-c("Pred","Pred2")
plot(forecast(ARIMA.with.Pred2,h=5,xreg=test.pred))
points(1:length(train),fitted(ARIMA.with.Pred2),type="l",col="blue")
points(1:40,Bill,type="l")
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40]))
accuracy(casts.avgtemp,Bill[36:40])
cast.avgtemp.quad<-forecast(ARIMA.with.Pred2,h=5,xreg=test.pred)
accuracy(cast.avgtemp.quad,Bill[36:40])
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5))
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5)
accuracy(casts.avgtemp,Bill[36:40])
cast.avgtemp.quad<-forecast(ARIMA.with.Pred2,h=5)
accuracy(cast.avgtemp.quad,Bill[36:40])
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5)
accuracy(casts.avgtemp,Bill[36:40])
cast.avgtemp.quad<-forecast(ARIMA.with.Pred2,h=5)
accuracy(cast.avgtemp.quad,Bill[36:40])
newpred<-as.matrix(cbind(predictor,predictor^2))
colnames(newpred)<-c("Pred","Pred2")
ARIMA.with.Pred2<-arima(train,order=c(4,0,0))
ARIMA.with.Pred2
tsdisplay(residuals(ARIMA.with.Pred2),lag.max=15,main="Resid. Diagnostics AR(4) Quadratic")
test.pred<-as.matrix(cbind(AvgTemp[36:40],AvgTemp[36:40]^2))
colnames(test.pred)<-c("Pred","Pred2")
plot(forecast(ARIMA.with.Pred2,h=5,xreg=test.pred))
points(1:length(train),fitted(ARIMA.with.Pred2),type="l",col="blue")
points(1:40,Bill,type="l")
casts.avgtemp<-forecast(ARIMA.with.Pred,h=5)
accuracy(casts.avgtemp,Bill[36:40])
cast.avgtemp.quad<-forecast(ARIMA.with.Pred2,h=5)
accuracy(cast.avgtemp.quad,Bill[36:40])
ARIMA.with.Pred<-arima(train,order=c(4,0,0))
ARIMA.with.Pred
tsdisplay(residuals(ARIMA.with.Pred),lag.max=15,main="Resid. Diagnostics with AR(4)")
plot(forecast(ARIMA.with.Pred,h=5,xreg=c(predictor=AvgTemp[36:40])))
points(1:length(train),fitted(ARIMA.with.Pred),type="l",col="blue")
points(1:40,Bill,type="l")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(plyr)
library(dplyr)
library(GGally)
library(tidyverse)
library(naniar)
# Reading datafile
Life_Expectancy_Df <- read.csv("../data\ /Life\ Expectancy\ Data.csv", header=TRUE)
Life_Expectancy_Df_2014 <- Life_Expectancy_Df %>% filter(Year == 2014) # Keeping ony 2014 data as per requirement
gg_miss_var(Life_Expectancy_Df_2014)
##############
#1. Does various predicting factors which has been chosen initially really affect the Life expectancy? What are the predicting variables actually affecting the life expectancy?
#ggplot(Life_Expectancy_Df_2014, aes (x = Life.expectancy , y = Country )) +  geom_col()  + ylab("Country Name ") + xlab("Life Expectancy") +  ggtitle("Distribution of Life Expectancy for country") + theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(Life_Expectancy_Df_2014, aes(x = Status , y = Life.expectancy )) +  geom_boxplot()  + xlab("Country's Status ") + ylab("Life Expectancy") +  ggtitle("Distribution of Life Expectancy for Developing vs Developed country")
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Adult.Mortality, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Alcohol, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = percentage.expenditure, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Hepatitis.B, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Measles , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  BMI , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = under.five.deaths , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Polio, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Total.expenditure, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Diphtheria , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  HIV.AIDS , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = GDP , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Population , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  thinness..1.19.years , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  thinness.5.9.years , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Income.composition.of.resources , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Schooling , y = Life.expectancy )) +  geom_point()
##############
#2.Should a country having a lower life expectancy value(<65) increase its healthcare expenditure in order to improve its average lifespan?
#We need to divide the data into 2 categories like >65 and <65 to compare if total expenditure has significant impact on life expectancy.
Life_Expectancy_Df_2014 <- add_column(Life_Expectancy_Df_2014,  Life.expectancy = "Low", .after = "Schooling")
Life_Expectancy_Df_2014 <- Life_Expectancy_Df_2014 %>% mutate(Life.expectancy.1 = replace(Life.expectancy.1, Life.expectancy >= 65.0, "High"))
ggplot(Life_Expectancy_Df_2014, aes(x = Life.expectancy.1 , y = Total.expenditure )) +  geom_boxplot()  + xlab("Life Expectancy (More than 65 vs Less than 65) ") + ylab("Healthcare expenditure amount") +  ggtitle("Distribution of Healthcare expenditure for low vs high life expectancy")
##############
#3.How does Infant and Adult mortality rates affect life expectancy?
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Adult.Mortality, y = Life.expectancy )) +  geom_point()
##############
#4.Does Life Expectancy has positive or negative correlation with eating habits, lifestyle, exercise, smoking, drinking alcohol etc.
summary (Life_Expectancy_Df_2014)
head(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[1,23])
pairs(Life_Expectancy_Df_2014[,1:23])
Life_Expectancy_Df_2014
columns(Life_Expectancy_Df_2014)
column(Life_Expectancy_Df_2014)
colnames(Life_Expectancy_Df_2014)
Life_Expectancy_Df_2014
pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,16:22])
# print out summary for data
summary (Life_Expectancy_Df_2014)
# matrix grid to determine correlated variables
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
library(zoom)
install.packages('zoom')
library(zoom)
pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
zm()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(plyr)
library(dplyr)
library(GGally)
library(tidyverse)
library(naniar)
library(zoom)
# Reading datafile
Life_Expectancy_Df <- read.csv("../data\ /Life\ Expectancy\ Data.csv", header=TRUE)
Life_Expectancy_Df_2014 <- Life_Expectancy_Df %>% filter(Year == 2014) # Keeping ony 2014 data as per requirement
gg_miss_var(Life_Expectancy_Df_2014)
##############
#1. Does various predicting factors which has been chosen initially really affect the Life expectancy? What are the predicting variables actually affecting the life expectancy?
#ggplot(Life_Expectancy_Df_2014, aes (x = Life.expectancy , y = Country )) +  geom_col()  + ylab("Country Name ") + xlab("Life Expectancy") +  ggtitle("Distribution of Life Expectancy for country") + theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(Life_Expectancy_Df_2014, aes(x = Status , y = Life.expectancy )) +  geom_boxplot()  + xlab("Country's Status ") + ylab("Life Expectancy") +  ggtitle("Distribution of Life Expectancy for Developing vs Developed country")
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Adult.Mortality, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Alcohol, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = percentage.expenditure, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Hepatitis.B, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Measles , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  BMI , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = under.five.deaths , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Polio, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Total.expenditure, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Diphtheria , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  HIV.AIDS , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = GDP , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Population , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  thinness..1.19.years , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x =  thinness.5.9.years , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Income.composition.of.resources , y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Schooling , y = Life.expectancy )) +  geom_point()
##############
#2.Should a country having a lower life expectancy value(<65) increase its healthcare expenditure in order to improve its average lifespan?
#We need to divide the data into 2 categories like >65 and <65 to compare if total expenditure has significant impact on life expectancy.
Life_Expectancy_Df_2014 <- add_column(Life_Expectancy_Df_2014,  Life.expectancy = "Low", .after = "Schooling")
Life_Expectancy_Df_2014 <- Life_Expectancy_Df_2014 %>% mutate(Life.expectancy.1 = replace(Life.expectancy.1, Life.expectancy >= 65.0, "High"))
ggplot(Life_Expectancy_Df_2014, aes(x = Life.expectancy.1 , y = Total.expenditure )) +  geom_boxplot()  + xlab("Life Expectancy (More than 65 vs Less than 65) ") + ylab("Healthcare expenditure amount") +  ggtitle("Distribution of Healthcare expenditure for low vs high life expectancy")
##############
#3.How does Infant and Adult mortality rates affect life expectancy?
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Adult.Mortality, y = Life.expectancy )) +  geom_point()
##############
#4.Does Life Expectancy has positive or negative correlation with eating habits, lifestyle, exercise, smoking, drinking alcohol etc.
# print out summary for data
summary (Life_Expectancy_Df_2014)
# matrix grid to determine correlated variables
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
zm() #allows for zooming in and out
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(plyr)
library(dplyr)
library(GGally)
library(tidyverse)
library(naniar)
library(zoom)
# Reading datafile
Life_Expectancy_Df <- read.csv("../data\ /Life\ Expectancy\ Data.csv", header=TRUE)
Life_Expectancy_Df_2014 <- Life_Expectancy_Df %>% filter(Year == 2014) # Keeping ony 2014 data as per requirement
gg_miss_var(Life_Expectancy_Df_2014)
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
zm()
p <- pairs(Life_Expectancy_Df_2014[,c(2,4:22)])
ggplotly(p)
summary (Life_Expectancy_Df_2014)
Life_Expectancy_Df_2014
summary (Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
ggpairs(iris[1:4],
main = "Anderson's Iris Data -- 3 species",
pch = 21,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
p <- ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
ggplot(p)
ggplotly(p)
p <- ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
p
p <- ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
p
ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
# print out summary for data
summary (Life_Expectancy_Df_2014)
# matrix grid to determine correlated variables
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(plyr)
library(dplyr)
library(GGally)
library(tidyverse)
library(naniar)
library(zoom)
# Reading datafile
Life_Expectancy_Df <- read.csv("../data\ /Life\ Expectancy\ Data.csv", header=TRUE)
Life_Expectancy_Df_2014 <- Life_Expectancy_Df %>% filter(Year == 2014) # Keeping ony 2014 data as per requirement
gg_miss_var(Life_Expectancy_Df_2014)
# print out summary for data
summary (Life_Expectancy_Df_2014)
# matrix grid to determine correlated variables
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(2,4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
pairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
ggpairs(Life_Expectancy_Df_2014[,c(2,4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
Life_Expectancy_Df_2014
ggpairs(Life_Expectancy_Df_2014[,c(4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
Life_Expectancy_Df_2014
ggpairs(Life_Expectancy_Df_2014[,c(4:22)],
main = "WHO Data",
pch = 10,
bg = c("#1b9e77", "#d95f02")[unclass(Life_Expectancy_Df_2014$Status)])
Life_Expectancy_Df_2014
cols[Life_Expectancy_Df_2014$Status == "Developing")] <- "blue"
cols <- character(nrow(Life_Expectancy_Df_2014))
cols[] <- "black"
cols[Life_Expectancy_Df_2014$Status == "Developing")] <- "blue"
Life_Expectancy_Df_2014$Status
Life_Expectancy_Df_2014$Status == "Developing"
# print out summary for data
summary (Life_Expectancy_Df_2014)
# matrix grid to determine correlated variables
colnames(Life_Expectancy_Df_2014)
pairs(Life_Expectancy_Df_2014[,c(4:9)])
pairs(Life_Expectancy_Df_2014[,10:15])
pairs(Life_Expectancy_Df_2014[,16:22])
cols <- character(nrow(Life_Expectancy_Df_2014))
cols[] <- "black"
cols[Life_Expectancy_Df_2014$Status == "Developing"] <- "blue"
cols[Life_Expectancy_Df_2014$Status == "Developed"] <- "red"
pairs(Life_Expectancy_Df_2014,col=cols)
ggpairs(Life_Expectancy_Df_2014[,c(4:22)],
main = "WHO Data",
pch = 10,
cols=cols)
ggpairs(Life_Expectancy_Df_2014[,c(4:22)],
main = "WHO Data",
pch = 10,
cols=Life_Expectancy_Df_2014$Status)
Life_Expectancy_Df_2014
ggpairs(Life_Expectancy_Df_2014[,c(4:22)],
main = "WHO Data",
pch = 10,
aes(colour=Life_Expectancy_Df_2014$Status))
ggpairs(Life_Expectancy_Df_2014[,c(4:19, 21:22)],
main = "WHO Data",
pch = 10,
aes(colour=Life_Expectancy_Df_2014$Status))
ggpairs(Life_Expectancy_Df_2014[,c(4:19, 22)],
main = "WHO Data",
pch = 10,
aes(colour=Life_Expectancy_Df_2014$Status))
ggpairs(Life_Expectancy_Df_2014[,c(4:5, 7:19, 22)],
main = "WHO Data",
pch = 10,
aes(colour=Life_Expectancy_Df_2014$Status))
Life_Expectancy_Df_2014
Life_Expectancy_Df_2014$Status_dc <- values[Life_Expectancy_Df_2014$Status]
values <- c(0, 1)
Life_Expectancy_Df_2014$Status_dc <- values[Life_Expectancy_Df_2014$Status]
Life_Expectancy_Df_2014
Life_Expectancy_Df_2014_dc <- Life_Expectancy_Df_2014[,c(4:24)]
Life_Expectancy_Df_2014_dc <- Life_Expectancy_Df_2014[,c(4:23)]
Life_Expectancy_Df_2014_dc
# Fit the full model
full.model <- lm(Life.expectancy ~., data = Life_Expectancy_Df_2014_dc)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
library(MASS)
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
# Fit the full model
full.model <- lm(Life.expectancy ~., data = Life_Expectancy_Df_2014_dc)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
df1_complete <- na.omit(Life_Expectancy_Df_2014_dc
full.model <- lm(Life.expectancy ~., data = df1_complete)
df1_complete
df1_complete <- na.omit(Life_Expectancy_Df_2014_dc)
full.model <- lm(Life.expectancy ~., data = df1_complete)
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
df1_complete
full.model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(ggplot2)
library(plyr)
library(dplyr)
library(GGally)
library(tidyverse)
library(naniar)
library(zoom)
library(MASS)
full.model <- lm(Life.expectancy ~., data = df1_complete)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
# forward regression model
foward.model <- stepAIC(full.model, direction = "forward",
trace = FALSE)
summary(foward.model)
# backward regression model
backward.model <- stepAIC(full.model, direction = "backward",
trace = FALSE)
summary(backward.model)
summary(step.model)
summary(foward.model)
summary(backward.model)
ggplot(Life_Expectancy_Df_2014, aes(x = infant.deaths, y = Life.expectancy )) +  geom_point()
ggplot(Life_Expectancy_Df_2014, aes(x = Adult.Mortality, y = Life.expectancy )) +  geom_point()
